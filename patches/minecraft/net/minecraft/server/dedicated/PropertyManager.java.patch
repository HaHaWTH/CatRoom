--- before/net/minecraft/server/dedicated/PropertyManager.java
+++ after/net/minecraft/server/dedicated/PropertyManager.java
@@ -1,10 +1,10 @@
 package net.minecraft.server.dedicated;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.IOException;
+import java.io.*;
+import java.nio.charset.StandardCharsets;
 import java.util.Properties;
+
+import joptsimple.OptionSet;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
@@ -14,8 +14,9 @@
 public class PropertyManager
 {
     private static final Logger field_164440_a = LogManager.getLogger();
-    private final Properties field_73672_b = new Properties();
+    public final Properties field_73672_b = new Properties();
     private final File field_73673_c;
+    private OptionSet options = null;
 
     public PropertyManager(File p_i46372_1_)
     {
@@ -28,7 +29,7 @@
             try
             {
                 fileinputstream = new FileInputStream(p_i46372_1_);
-                this.field_73672_b.load(fileinputstream);
+                this.field_73672_b.load(new InputStreamReader(fileinputstream, StandardCharsets.UTF_8));
             }
             catch (Exception exception)
             {
@@ -56,6 +57,18 @@
         }
     }
 
+    public PropertyManager(final OptionSet options) {
+        this((File) options.valueOf("config"));
+        this.options = options;
+    }
+
+    private <T> T getOverride(String name, T value) {
+        if ((this.options != null) && (this.options.has(name))) {
+            return (T) this.options.valueOf(name);
+        }
+        return value;
+    }
+
     public void func_73666_a()
     {
         field_164440_a.info("Generating new properties file");
@@ -68,8 +81,13 @@
 
         try
         {
+            // CraftBukkit start - Don't attempt writing to file if it's read only
+            if (this.field_73673_c.exists() && !this.field_73673_c.canWrite()) {
+                return;
+            }
+            // CraftBukkit end
             fileoutputstream = new FileOutputStream(this.field_73673_c);
-            this.field_73672_b.store(fileoutputstream, "Minecraft server properties");
+            this.field_73672_b.store(new OutputStreamWriter(fileoutputstream, StandardCharsets.UTF_8), "Minecraft server properties");
         }
         catch (Exception exception)
         {
@@ -105,20 +123,20 @@
             this.func_73668_b();
         }
 
-        return this.field_73672_b.getProperty(p_73671_1_, p_73671_2_);
+        return getOverride(p_73671_1_, this.field_73672_b.getProperty(p_73671_1_, p_73671_2_));
     }
 
     public int func_73669_a(String p_73669_1_, int p_73669_2_)
     {
         try
         {
-            return Integer.parseInt(this.func_73671_a(p_73669_1_, "" + p_73669_2_));
+            return getOverride(p_73669_1_, Integer.parseInt(this.func_73671_a(p_73669_1_, "" + p_73669_2_)));
         }
         catch (Exception exception)
         {
             this.field_73672_b.setProperty(p_73669_1_, "" + p_73669_2_);
             this.func_73668_b();
-            return p_73669_2_;
+            return getOverride(p_73669_1_, p_73669_2_);
         }
     }
 
@@ -126,13 +144,13 @@
     {
         try
         {
-            return Long.parseLong(this.func_73671_a(p_179885_1_, "" + p_179885_2_));
+            return getOverride(p_179885_1_, Long.parseLong(this.func_73671_a(p_179885_1_, "" + p_179885_2_)));
         }
         catch (Exception exception)
         {
             this.field_73672_b.setProperty(p_179885_1_, "" + p_179885_2_);
             this.func_73668_b();
-            return p_179885_2_;
+            return getOverride(p_179885_1_, p_179885_2_);
         }
     }
 
@@ -140,13 +158,13 @@
     {
         try
         {
-            return Boolean.parseBoolean(this.func_73671_a(p_73670_1_, "" + p_73670_2_));
+            return getOverride(p_73670_1_, Boolean.parseBoolean(this.func_73671_a(p_73670_1_, "" + p_73670_2_)));
         }
         catch (Exception exception)
         {
             this.field_73672_b.setProperty(p_73670_1_, "" + p_73670_2_);
             this.func_73668_b();
-            return p_73670_2_;
+            return getOverride(p_73670_1_, p_73670_2_);
         }
     }
 
