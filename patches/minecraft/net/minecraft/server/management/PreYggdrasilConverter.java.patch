--- before/net/minecraft/server/management/PreYggdrasilConverter.java
+++ after/net/minecraft/server/management/PreYggdrasilConverter.java
@@ -22,6 +22,8 @@
 import java.util.UUID;
 import javax.annotation.Nullable;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.nbt.CompressedStreamTools;
+import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.dedicated.DedicatedServer;
 import net.minecraft.server.dedicated.PropertyManager;
@@ -39,25 +41,6 @@
     public static final File field_152730_c = new File("ops.txt");
     public static final File field_152731_d = new File("white-list.txt");
 
-    @SideOnly(Side.SERVER)
-    static List<String> func_152721_a(File p_152721_0_, Map<String, String[]> p_152721_1_) throws IOException
-    {
-        List<String> list = Files.readLines(p_152721_0_, StandardCharsets.UTF_8);
-
-        for (String s : list)
-        {
-            s = s.trim();
-
-            if (!s.startsWith("#") && s.length() >= 1)
-            {
-                String[] astring = s.split("\\|");
-                p_152721_1_.put(astring[0].toLowerCase(Locale.ROOT), astring);
-            }
-        }
-
-        return list;
-    }
-
     private static void func_152717_a(MinecraftServer p_152717_0_, Collection<String> p_152717_1_, ProfileLookupCallback p_152717_2_)
     {
         String[] astring = Iterators.toArray(Iterators.filter(p_152717_1_.iterator(), new Predicate<String>()
@@ -68,7 +51,7 @@
             }
         }), String.class);
 
-        if (p_152717_0_.func_71266_T())
+        if (p_152717_0_.func_71266_T() || org.spigotmc.SpigotConfig.bungee) // Spigot: bungee = online mode, for now.
         {
             p_152717_0_.func_152359_aw().findProfilesByNames(astring, Agent.MINECRAFT, p_152717_2_);
         }
@@ -83,6 +66,64 @@
         }
     }
 
+    public static String func_187473_a(final MinecraftServer p_187473_0_, String p_187473_1_)
+    {
+        if (!StringUtils.func_151246_b(p_187473_1_) && p_187473_1_.length() <= 16)
+        {
+            GameProfile gameprofile = p_187473_0_.func_152358_ax().func_152655_a(p_187473_1_);
+
+            if (gameprofile != null && gameprofile.getId() != null)
+            {
+                return gameprofile.getId().toString();
+            }
+            else if (!p_187473_0_.func_71264_H() && p_187473_0_.func_71266_T())
+            {
+                final List<GameProfile> list = Lists.<GameProfile>newArrayList();
+                ProfileLookupCallback profilelookupcallback = new ProfileLookupCallback()
+                {
+                    public void onProfileLookupSucceeded(GameProfile p_onProfileLookupSucceeded_1_)
+                    {
+                        p_187473_0_.func_152358_ax().func_152649_a(p_onProfileLookupSucceeded_1_);
+                        list.add(p_onProfileLookupSucceeded_1_);
+                    }
+                    public void onProfileLookupFailed(GameProfile p_onProfileLookupFailed_1_, Exception p_onProfileLookupFailed_2_)
+                    {
+                        PreYggdrasilConverter.field_152732_e.warn("Could not lookup user whitelist entry for {}", p_onProfileLookupFailed_1_.getName(), p_onProfileLookupFailed_2_);
+                    }
+                };
+                func_152717_a(p_187473_0_, Lists.newArrayList(p_187473_1_), profilelookupcallback);
+                return !list.isEmpty() && ((GameProfile)list.get(0)).getId() != null ? ((GameProfile)list.get(0)).getId().toString() : "";
+            }
+            else
+            {
+                return EntityPlayer.func_146094_a(new GameProfile((UUID)null, p_187473_1_)).toString();
+            }
+        }
+        else
+        {
+            return p_187473_1_;
+        }
+    }
+
+    @SideOnly(Side.SERVER)
+    static List<String> func_152721_a(File p_152721_0_, Map<String, String[]> p_152721_1_) throws IOException
+    {
+        List<String> list = Files.readLines(p_152721_0_, StandardCharsets.UTF_8);
+
+        for (String s : list)
+        {
+            s = s.trim();
+
+            if (!s.startsWith("#") && s.length() >= 1)
+            {
+                String[] astring = s.split("\\|");
+                p_152721_1_.put(astring[0].toLowerCase(Locale.ROOT), astring);
+            }
+        }
+
+        return list;
+    }
+
     @SideOnly(Side.SERVER)
     public static boolean func_152724_a(final MinecraftServer p_152724_0_) throws IOException
     {
@@ -96,9 +137,10 @@
                 {
                     userlistbans.func_152679_g();
                 }
-                catch (FileNotFoundException filenotfoundexception)
+                // CraftBukkit start - FileNotFoundException -> IOException, don't print stacktrace
+                catch (IOException filenotfoundexception)
                 {
-                    field_152732_e.warn("Could not load existing file {}", userlistbans.func_152691_c().getName(), filenotfoundexception);
+                    field_152732_e.warn("Could not load existing file {}", userlistbans.func_152691_c().getName());
                 }
             }
 
@@ -177,9 +219,10 @@
                 {
                     userlistipbans.func_152679_g();
                 }
-                catch (FileNotFoundException filenotfoundexception)
+                // CraftBukkit start - FileNotFoundException -> IOException, don't print stacktrace
+                catch (IOException filenotfoundexception)
                 {
-                    field_152732_e.warn("Could not load existing file {}", userlistipbans.func_152691_c().getName(), filenotfoundexception);
+                    field_152732_e.warn("Could not load existing file {}", userlistipbans.func_152691_c().getName());
                 }
             }
 
@@ -227,9 +270,10 @@
                 {
                     userlistops.func_152679_g();
                 }
-                catch (FileNotFoundException filenotfoundexception)
+                // CraftBukkit start - FileNotFoundException -> IOException, don't print stacktrace
+                catch (IOException filenotfoundexception)
                 {
-                    field_152732_e.warn("Could not load existing file {}", userlistops.func_152691_c().getName(), filenotfoundexception);
+                    field_152732_e.warn("Could not load existing file {}", userlistops.func_152691_c().getName());
                 }
             }
 
@@ -293,9 +337,10 @@
                 {
                     userlistwhitelist.func_152679_g();
                 }
-                catch (FileNotFoundException filenotfoundexception)
+                // CraftBukkit start - FileNotFoundException -> IOException, don't print stacktrace
+                catch (IOException filenotfoundexception)
                 {
-                    field_152732_e.warn("Could not load existing file {}", userlistwhitelist.func_152691_c().getName(), filenotfoundexception);
+                    field_152732_e.warn("Could not load existing file {}", userlistwhitelist.func_152691_c().getName());
                 }
             }
 
@@ -318,9 +363,7 @@
 
                         if (!(p_onProfileLookupFailed_2_ instanceof ProfileNotFoundException))
                         {
-                            throw new PreYggdrasilConverter.ConversionError(
-                                "Could not request user " + p_onProfileLookupFailed_1_.getName() + " from backend systems", p_onProfileLookupFailed_2_
-                            );
+                            throw new ConversionError("Could not request user " + p_onProfileLookupFailed_1_.getName() + " from backend systems", p_onProfileLookupFailed_2_);
                         }
                     }
                 };
@@ -346,48 +389,6 @@
         }
     }
 
-    public static String func_187473_a(final MinecraftServer p_187473_0_, String p_187473_1_)
-    {
-        if (!StringUtils.func_151246_b(p_187473_1_) && p_187473_1_.length() <= 16)
-        {
-            GameProfile gameprofile = p_187473_0_.func_152358_ax().func_152655_a(p_187473_1_);
-
-            if (gameprofile != null && gameprofile.getId() != null)
-            {
-                return gameprofile.getId().toString();
-            }
-            else if (!p_187473_0_.func_71264_H() && p_187473_0_.func_71266_T())
-            {
-                final List<GameProfile> list = Lists.newArrayList();
-                ProfileLookupCallback profilelookupcallback = new ProfileLookupCallback()
-                {
-                    @Override
-                    public void onProfileLookupSucceeded(GameProfile p_onProfileLookupSucceeded_1_)
-                    {
-                        p_187473_0_.func_152358_ax().func_152649_a(p_onProfileLookupSucceeded_1_);
-                        list.add(p_onProfileLookupSucceeded_1_);
-                    }
-                    @Override
-                    public void onProfileLookupFailed(GameProfile p_onProfileLookupFailed_1_, Exception p_onProfileLookupFailed_2_)
-                    {
-                        PreYggdrasilConverter.field_152732_e
-                        .warn("Could not lookup user whitelist entry for {}", p_onProfileLookupFailed_1_.getName(), p_onProfileLookupFailed_2_);
-                    }
-                };
-                func_152717_a(p_187473_0_, Lists.newArrayList(p_187473_1_), profilelookupcallback);
-                return !list.isEmpty() && list.get(0).getId() != null ? list.get(0).getId().toString() : "";
-            }
-            else
-            {
-                return EntityPlayer.func_146094_a(new GameProfile(null, p_187473_1_)).toString();
-            }
-        }
-        else
-        {
-            return p_187473_1_;
-        }
-    }
-
     @SideOnly(Side.SERVER)
     public static boolean func_152723_a(final DedicatedServer p_152723_0_, PropertyManager p_152723_1_)
     {
@@ -457,6 +458,29 @@
                     {
                         File file5 = new File(file1, p_152743_2_ + ".dat");
                         File file6 = new File(p_152743_1_, p_152743_3_ + ".dat");
+                        // CraftBukkit start - Use old file name to seed lastKnownName
+                        NBTTagCompound root = null;
+
+                        try {
+                            root = CompressedStreamTools.func_74796_a(new java.io.FileInputStream(file1));
+                        } catch (Exception exception) {
+                            exception.printStackTrace();
+                        }
+
+                        if (root != null) {
+                            if (!root.func_74764_b("bukkit")) {
+                                root.func_74782_a("bukkit", new NBTTagCompound());
+                            }
+                            NBTTagCompound data = root.func_74775_l("bukkit");
+                            data.func_74778_a("lastKnownName", p_152743_2_);
+
+                            try {
+                                CompressedStreamTools.func_74799_a(root, new java.io.FileOutputStream(file2));
+                            } catch (Exception exception) {
+                                exception.printStackTrace();
+                            }
+                        }
+                        // CraftBukkit end
                         PreYggdrasilConverter.func_152711_b(p_152743_1_);
 
                         if (!file5.renameTo(file6))
@@ -611,7 +635,7 @@
     private static File func_152725_d(PropertyManager p_152725_0_)
     {
         String s = p_152725_0_.func_73671_a("level-name", "world");
-        File file1 = new File(s);
+        File file1 = new File(MinecraftServer.getServerInst().server.getWorldContainer(), s); // CraftBukkit - Respect container setting
         return new File(file1, "players");
     }
 
