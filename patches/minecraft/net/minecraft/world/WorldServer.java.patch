--- before/net/minecraft/world/WorldServer.java
+++ after/net/minecraft/world/WorldServer.java
@@ -1,6 +1,5 @@
 package net.minecraft.world;
 
-import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -15,12 +14,15 @@
 import java.util.Set;
 import java.util.TreeSet;
 import java.util.UUID;
+import java.util.logging.Level;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.AdvancementManager;
 import net.minecraft.advancements.FunctionManager;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockEventData;
+import net.minecraft.block.BlockJukebox;
+import net.minecraft.block.ITileEntityProvider;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.crash.CrashReport;
@@ -50,6 +52,7 @@
 import net.minecraft.scoreboard.ServerScoreboard;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.management.PlayerChunkMap;
+import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.IProgressUpdate;
 import net.minecraft.util.IThreadListener;
@@ -59,6 +62,7 @@
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.ChunkPos;
 import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.math.Vec3d;
 import net.minecraft.village.VillageCollection;
 import net.minecraft.village.VillageSiege;
 import net.minecraft.world.biome.Biome;
@@ -76,58 +80,116 @@
 import net.minecraft.world.storage.WorldInfo;
 import net.minecraft.world.storage.WorldSavedDataCallableSave;
 import net.minecraft.world.storage.loot.LootTableManager;
+import net.minecraftforge.common.DimensionManager;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.event.entity.CreatureSpawnEvent;
+import org.bukkit.event.weather.LightningStrikeEvent;
 
 public class WorldServer extends World implements IThreadListener
 {
     private static final Logger field_147491_a = LogManager.getLogger();
     private final MinecraftServer field_73061_a;
-    private final EntityTracker field_73062_L;
+    public EntityTracker field_73062_L;
     private final PlayerChunkMap field_73063_M;
-    private final Set<NextTickListEntry> field_73064_N = Sets.newHashSet();
-    private final TreeSet<NextTickListEntry> field_73065_O = new TreeSet<>();
-    private final Map<UUID, Entity> field_175741_N = Maps.newHashMap();
+    private final Set<NextTickListEntry> field_73064_N = Sets.<NextTickListEntry>newHashSet();
+    private final TreeSet<NextTickListEntry> field_73065_O = new TreeSet<NextTickListEntry>();
+    private final Map<UUID, Entity> field_175741_N = Maps.<UUID, Entity>newHashMap();
     public boolean field_73058_d;
     private boolean field_73068_P;
     private int field_80004_Q;
     private final Teleporter field_85177_Q;
     private final WorldEntitySpawner field_175742_R = new WorldEntitySpawner();
     protected final VillageSiege field_175740_d = new VillageSiege(this);
-    private final WorldServer.ServerBlockEventList[] field_147490_S = new WorldServer.ServerBlockEventList[]
-    {
-        new WorldServer.ServerBlockEventList(), new WorldServer.ServerBlockEventList()
-    };
+    private final WorldServer.ServerBlockEventList[] field_147490_S = new WorldServer.ServerBlockEventList[] {new WorldServer.ServerBlockEventList(), new WorldServer.ServerBlockEventList()};
     private int field_147489_T;
-    private final List<NextTickListEntry> field_94579_S = Lists.newArrayList();
+    private final List<NextTickListEntry> field_94579_S = Lists.<NextTickListEntry>newArrayList();
+
+    /** Stores the recently processed (lighting) chunks */
+    protected Set<ChunkPos> doneChunks = new java.util.HashSet<ChunkPos>();
+    public List<Teleporter> customTeleporters = new ArrayList<Teleporter>();
+
+    public final int dimension;
+
+    private int lastTick = 0; // CatServer - implement realtime
+
+    public WorldServer(MinecraftServer server, ISaveHandler saveHandlerIn, WorldInfo info, int dimensionId, Profiler methodprofiler, org.bukkit.World.Environment env, org.bukkit.generator.ChunkGenerator gen) {
+        super(saveHandlerIn, info, net.minecraftforge.common.DimensionManager.createProviderFor(dimensionId), methodprofiler, false, gen, env);
+        this.pvpMode = server.func_71219_W();
+        info.world = this;
+        this.dimension = dimensionId;
+        this.field_73061_a = server;
+        this.field_73062_L = new EntityTracker(this);
+        this.field_73063_M = new PlayerChunkMap(this);
+        // Guarantee the dimension ID was not reset by the provider
+        int providerDim = this.field_73011_w.getDimension();
+        this.field_73011_w.func_76558_a(this);
+        this.field_73011_w.setDimension(providerDim);
+        this.field_73020_y = this.func_72970_h();
+        this.field_85177_Q = new org.bukkit.craftbukkit.v1_12_R1.CraftTravelAgent(this); // CraftBukkit
+        this.func_72966_v();
+        this.func_72947_a();
+        this.func_175723_af().func_177725_a(server.func_175580_aG());
+        // CatServer start - if overworld has loaded, use its mapstorage
+        WorldServer overworld = DimensionManager.getWorld(0);
+        if (overworld != null)
+        {
+            this.field_72988_C = overworld.field_72988_C;
+            perWorldStorage = new MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler(this, overworld.field_73019_z));
+        }
+        else
+        {
+            this.field_72988_C = new MapStorage(saveHandlerIn);
+            perWorldStorage = new MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler(this, field_73019_z));
+        }
+        // CatServer end
+        net.minecraftforge.common.DimensionManager.setWorld(dimensionId, this, server);
+    }
 
     public WorldServer(MinecraftServer p_i45921_1_, ISaveHandler p_i45921_2_, WorldInfo p_i45921_3_, int p_i45921_4_, Profiler p_i45921_5_)
     {
-        super(p_i45921_2_, p_i45921_3_, DimensionType.func_186069_a(p_i45921_4_).func_186070_d(), p_i45921_5_, false);
+        super(p_i45921_2_, p_i45921_3_, net.minecraftforge.common.DimensionManager.createProviderFor(p_i45921_4_), p_i45921_5_, false);
         this.field_73061_a = p_i45921_1_;
         this.field_73062_L = new EntityTracker(this);
         this.field_73063_M = new PlayerChunkMap(this);
+        this.dimension = p_i45921_4_;
+        // Guarantee the dimension ID was not reset by the provider
+        int providerDim = this.field_73011_w.getDimension();
         this.field_73011_w.func_76558_a(this);
+        this.field_73011_w.setDimension(providerDim);
         this.field_73020_y = this.func_72970_h();
         this.field_85177_Q = new Teleporter(this);
         this.func_72966_v();
         this.func_72947_a();
         this.func_175723_af().func_177725_a(p_i45921_1_.func_175580_aG());
+        // CatServer start - if overworld has loaded, use its mapstorage
+        WorldServer overworld = DimensionManager.getWorld(0);
+        if (overworld != null)
+        {
+            this.field_72988_C = overworld.field_72988_C;
+            perWorldStorage = new MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler(this, overworld.field_73019_z));
+        }
+        else
+        {
+            this.field_72988_C = new MapStorage(p_i45921_2_);
+            perWorldStorage = new MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler(this, field_73019_z));
+        }
+        // CatServer end
+        net.minecraftforge.common.DimensionManager.setWorld(p_i45921_4_, this, p_i45921_1_);
     }
 
-    @Override
     public World func_175643_b()
     {
         this.field_72988_C = new MapStorage(this.field_73019_z);
         String s = VillageCollection.func_176062_a(this.field_73011_w);
-        VillageCollection villagecollection = (VillageCollection)this.field_72988_C.func_75742_a(VillageCollection.class, s);
+        VillageCollection villagecollection = (VillageCollection)this.perWorldStorage.func_75742_a(VillageCollection.class, s);
 
         if (villagecollection == null)
         {
             this.field_72982_D = new VillageCollection(this);
-            this.field_72988_C.func_75745_a(s, this.field_72982_D);
+            this.perWorldStorage.func_75745_a(s, this.field_72982_D);
         }
         else
         {
@@ -135,19 +197,31 @@
             this.field_72982_D.func_82566_a(this);
         }
 
-        this.field_96442_D = new ServerScoreboard(this.field_73061_a);
-        ScoreboardSaveData scoreboardsavedata = (ScoreboardSaveData)this.field_72988_C.func_75742_a(ScoreboardSaveData.class, "scoreboard");
+        if (getServer().getScoreboardManager() == null) { // CraftBukkit
+            this.field_96442_D = new ServerScoreboard(this.field_73061_a);
+            ScoreboardSaveData scoreboardsavedata = (ScoreboardSaveData)this.field_72988_C.func_75742_a(ScoreboardSaveData.class, "scoreboard");
+    
+            if (scoreboardsavedata == null)
+            {
+                scoreboardsavedata = new ScoreboardSaveData();
+                this.field_72988_C.func_75745_a("scoreboard", scoreboardsavedata);
+            }
 
-        if (scoreboardsavedata == null)
-        {
-            scoreboardsavedata = new ScoreboardSaveData();
-            this.field_72988_C.func_75745_a("scoreboard", scoreboardsavedata);
+            scoreboardsavedata.func_96499_a(this.field_96442_D);
+            ((ServerScoreboard)this.field_96442_D).func_186684_a(new WorldSavedDataCallableSave(scoreboardsavedata));
+        } else {
+            this.field_96442_D = getServer().getScoreboardManager().getMainScoreboard().getHandle();
         }
 
-        scoreboardsavedata.func_96499_a(this.field_96442_D);
-        ((ServerScoreboard)this.field_96442_D).func_186684_a(new WorldSavedDataCallableSave(scoreboardsavedata));
         this.field_184151_B = new LootTableManager(new File(new File(this.field_73019_z.func_75765_b(), "data"), "loot_tables"));
-        this.field_191951_C = new AdvancementManager(new File(new File(this.field_73019_z.func_75765_b(), "data"), "advancements"));
+        // CraftBukkit start
+        if (this.dimension != 0) { // SPIGOT-3899 multiple worlds of advancements not supported
+            this.field_191951_C = this.field_73061_a.func_191949_aK();
+        }
+        if (this.field_191951_C == null) {
+            this.field_191951_C = new AdvancementManager(new File(new File(this.field_73019_z.func_75765_b(), "data"), "advancements"));
+        }
+        // CraftBukkit end
         this.field_193036_D = new FunctionManager(new File(new File(this.field_73019_z.func_75765_b(), "data"), "functions"), this.field_73061_a);
         this.func_175723_af().func_177739_c(this.field_72986_A.func_176120_C(), this.field_72986_A.func_176126_D());
         this.func_175723_af().func_177744_c(this.field_72986_A.func_176140_I());
@@ -164,14 +238,46 @@
             this.func_175723_af().func_177750_a(this.field_72986_A.func_176137_E());
         }
 
+        this.initCapabilities();
         return this;
     }
 
     @Override
+    public TileEntity func_175625_s(BlockPos pos) {
+        return super.func_175625_s(pos); // CatServer - not fix te
+    }
+
+    private TileEntity fixTileEntity(BlockPos pos, Block type, TileEntity found) {
+        this.getServer().getLogger().log(Level.SEVERE, "Block at {0},{1},{2} is {3} but has {4}" + ". "
+                + "Bukkit will attempt to fix this, but there may be additional damage that we cannot recover.", new Object[]{pos.func_177958_n(), pos.func_177956_o(), pos.func_177952_p(), org.bukkit.Material.getBlockMaterial(Block.func_149682_b(type)).toString(), found});
+        if (type instanceof ITileEntityProvider) {
+            TileEntity replacement = ((ITileEntityProvider) type).func_149915_a(this, type.func_176201_c(this.func_180495_p(pos)));
+            replacement.field_145850_b = this;
+            this.func_175690_a(pos, replacement);
+            return replacement;
+        } else {
+            this.getServer().getLogger().severe("Don't know how to fix for this type... Can't do anything! :(");
+            return found;
+        }
+    }
+
+    private boolean canSpawn(int x, int z) {
+        if (this.generator != null) {
+            return this.generator.canSpawn(this.getWorld(), x, z);
+        } else {
+            return this.field_73011_w.func_76566_a(x, z);
+        }
+    }
+
     public void func_72835_b()
     {
         super.func_72835_b();
 
+        // CatServer start - implement realtime
+        int elapsedTicks = this.lastTick > 0 ? catserver.server.CatServer.getCurrentTick() - this.lastTick : 1;
+        this.lastTick = catserver.server.CatServer.getCurrentTick();
+        // CatServer end
+
         if (this.func_72912_H().func_76093_s() && this.func_175659_aa() != EnumDifficulty.HARD)
         {
             this.func_72912_H().func_176144_a(EnumDifficulty.HARD);
@@ -183,8 +289,8 @@
         {
             if (this.func_82736_K().func_82766_b("doDaylightCycle"))
             {
-                long i = this.field_72986_A.func_76073_f() + 24000L;
-                this.field_72986_A.func_76068_b(i - i % 24000L);
+                long i = this.func_72820_D() + 24000L;
+                this.func_72877_b(i - i % 24000L);
             }
 
             this.func_73053_d();
@@ -192,11 +298,17 @@
 
         this.field_72984_F.func_76320_a("mobSpawner");
 
-        if (this.func_82736_K().func_82766_b("doMobSpawning") && this.field_72986_A.func_76067_t() != WorldType.field_180272_g)
+        // CraftBukkit start - Only call spawner if we have players online and the world allows for mobs or animals
+        long time = this.field_72986_A.func_82573_f();
+        if (this.func_82736_K().func_82766_b("doMobSpawning") && this.field_72986_A.func_76067_t() != WorldType.field_180272_g && (this.field_72985_G || this.field_72992_H) && this.field_73010_i.size() > 0)
         {
-            this.field_175742_R.func_77192_a(this, this.field_72985_G, this.field_72992_H, this.field_72986_A.func_82573_f() % 400L == 0L);
+            timings.mobSpawn.startTiming(); // Spigot
+            this.field_175742_R.func_77192_a(this, this.field_72985_G && (this.ticksPerMonsterSpawns != 0 && time % this.ticksPerMonsterSpawns == 0L), this.field_72992_H && (this.ticksPerAnimalSpawns != 0 && time % this.ticksPerAnimalSpawns == 0L), this.field_72986_A.func_82573_f() % 400L == 0L);
+            timings.mobSpawn.stopTiming(); // Spigot
+            // CraftBukkit end
         }
 
+        timings.doChunkUnload.startTiming(); // Spigot
         this.field_72984_F.func_76318_c("chunkSource");
         this.field_73020_y.func_73156_b();
         int j = this.func_72967_a(1.0F);
@@ -210,38 +322,61 @@
 
         if (this.func_82736_K().func_82766_b("doDaylightCycle"))
         {
-            this.field_72986_A.func_76068_b(this.field_72986_A.func_76073_f() + 1L);
+            if (catserver.server.CatServer.getConfig().enableRealtime) this.func_72877_b(this.func_72820_D() + elapsedTicks); else // CatServer - implement realtime
+            this.func_72877_b(this.func_72820_D() + 1L);
         }
+        timings.doChunkUnload.stopTiming(); // Spigot
 
         this.field_72984_F.func_76318_c("tickPending");
+        timings.doTickPending.startTiming(); // Spigot
         this.func_72955_a(false);
+        timings.doTickPending.stopTiming(); // Spigot
         this.field_72984_F.func_76318_c("tickBlocks");
+        timings.doTickTiles.startTiming(); // Spigot
         this.func_147456_g();
+        timings.doTickTiles.stopTiming(); // Spigot
         this.field_72984_F.func_76318_c("chunkMap");
+        timings.doChunkMap.startTiming(); // Spigot
         this.field_73063_M.func_72693_b();
+        timings.doChunkMap.stopTiming(); // Spigot
         this.field_72984_F.func_76318_c("village");
+        timings.doVillages.startTiming(); // Spigot
         this.field_72982_D.func_75544_a();
         this.field_175740_d.func_75528_a();
+        timings.doVillages.stopTiming(); // Spigot
         this.field_72984_F.func_76318_c("portalForcer");
+        timings.doPortalForcer.startTiming(); // Spigot
         this.field_85177_Q.func_85189_a(this.func_82737_E());
+        for (Teleporter tele : customTeleporters)
+        {
+            tele.func_85189_a(func_82737_E());
+        }
+        timings.doPortalForcer.stopTiming(); // Spigot
         this.field_72984_F.func_76319_b();
+        timings.doSounds.startTiming(); // Spigot
         this.func_147488_Z();
+        timings.doSounds.stopTiming(); // Spigot
+
+        timings.doChunkGC.startTiming();// Spigot
+        this.getWorld().processChunkGC();
+        timings.doChunkGC.stopTiming(); // Spigot
     }
 
     @Nullable
     public Biome.SpawnListEntry func_175734_a(EnumCreatureType p_175734_1_, BlockPos p_175734_2_)
     {
         List<Biome.SpawnListEntry> list = this.func_72863_F().func_177458_a(p_175734_1_, p_175734_2_);
-        return list != null && !list.isEmpty() ? WeightedRandom.func_76271_a(this.field_73012_v, list) : null;
+        list = net.minecraftforge.event.ForgeEventFactory.getPotentialSpawns(this, p_175734_1_, p_175734_2_, list);
+        return list != null && !list.isEmpty() ? (Biome.SpawnListEntry)WeightedRandom.func_76271_a(this.field_73012_v, list) : null;
     }
 
     public boolean func_175732_a(EnumCreatureType p_175732_1_, Biome.SpawnListEntry p_175732_2_, BlockPos p_175732_3_)
     {
         List<Biome.SpawnListEntry> list = this.func_72863_F().func_177458_a(p_175732_1_, p_175732_3_);
+        list = net.minecraftforge.event.ForgeEventFactory.getPotentialSpawns(this, p_175732_1_, p_175732_3_, list);
         return list != null && !list.isEmpty() ? list.contains(p_175732_2_) : false;
     }
 
-    @Override
     public void func_72854_c()
     {
         this.field_73068_P = false;
@@ -257,7 +392,7 @@
                 {
                     ++i;
                 }
-                else if (entityplayer.func_70608_bn())
+                else if (entityplayer.func_70608_bn() || entityplayer.fauxSleeping)
                 {
                     ++j;
                 }
@@ -284,25 +419,29 @@
 
     private void func_73051_P()
     {
-        this.field_72986_A.func_76080_g(0);
-        this.field_72986_A.func_76084_b(false);
-        this.field_72986_A.func_76090_f(0);
-        this.field_72986_A.func_76069_a(false);
+        this.field_73011_w.resetRainAndThunder();
     }
 
+    // TODO: Test this method
     public boolean func_73056_e()
     {
         if (this.field_73068_P && !this.field_72995_K)
         {
+            // CraftBukkit - This allows us to assume that some people are in bed but not really, allowing time to pass in spite of AFKers
+            boolean foundActualSleepers = false;
+
             for (EntityPlayer entityplayer : this.field_73010_i)
             {
-                if (!entityplayer.func_175149_v() && !entityplayer.func_71026_bH())
+                if (entityplayer.func_71026_bH()) {
+                    foundActualSleepers = true;
+                }
+                if (!entityplayer.func_175149_v() && !entityplayer.func_71026_bH() || entityplayer.fauxSleeping)
                 {
                     return false;
                 }
             }
 
-            return true;
+            return foundActualSleepers;
         }
         else
         {
@@ -311,7 +450,6 @@
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public void func_72974_f()
     {
         if (this.field_72986_A.func_76075_d() <= 0)
@@ -327,8 +465,9 @@
         {
             i += this.field_73012_v.nextInt(8) - this.field_73012_v.nextInt(8);
             j += this.field_73012_v.nextInt(8) - this.field_73012_v.nextInt(8);
+            ++k;
 
-            if (++k == 10000)
+            if (k == 10000)
             {
                 break;
             }
@@ -338,8 +477,7 @@
         this.field_72986_A.func_76087_c(j);
     }
 
-    @Override
-    protected boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_)
+    public boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_)
     {
         return this.func_72863_F().func_73149_a(p_175680_1_, p_175680_2_);
     }
@@ -348,7 +486,7 @@
     {
         this.field_72984_F.func_76320_a("playerCheckLight");
 
-        if (!this.field_73010_i.isEmpty())
+        if (spigotConfig.randomLightUpdates && !this.field_73010_i.isEmpty()) // Spigot
         {
             int i = this.field_73012_v.nextInt(this.field_73010_i.size());
             EntityPlayer entityplayer = this.field_73010_i.get(i);
@@ -361,7 +499,6 @@
         this.field_72984_F.func_76319_b();
     }
 
-    @Override
     protected void func_147456_g()
     {
         this.func_184162_i();
@@ -372,7 +509,7 @@
 
             while (iterator1.hasNext())
             {
-                iterator1.next().func_150804_b(false);
+                ((Chunk)iterator1.next()).func_150804_b(false);
             }
         }
         else
@@ -382,7 +519,7 @@
             boolean flag1 = this.func_72911_I();
             this.field_72984_F.func_76320_a("pollingChunks");
 
-            for (Iterator<Chunk> iterator = this.field_73063_M.func_187300_b(); iterator.hasNext(); this.field_72984_F.func_76319_b())
+            for (Iterator<Chunk> iterator = getPersistentChunkIterable(this.field_73063_M.func_187300_b()); iterator.hasNext(); this.field_72984_F.func_76319_b())
             {
                 this.field_72984_F.func_76320_a("getChunk");
                 Chunk chunk = iterator.next();
@@ -392,9 +529,10 @@
                 chunk.func_76594_o();
                 this.field_72984_F.func_76318_c("tickChunk");
                 chunk.func_150804_b(false);
+                if (!chunk.areNeighborsLoaded(1)) continue; // Spigot
                 this.field_72984_F.func_76318_c("thunder");
 
-                if (flag && flag1 && this.field_73012_v.nextInt(100000) == 0)
+                if (this.field_73011_w.canDoLightning(chunk) && flag && flag1 && this.field_73012_v.nextInt(100000) == 0)
                 {
                     this.field_73005_l = this.field_73005_l * 3 + 1013904223;
                     int l = this.field_73005_l >> 2;
@@ -404,47 +542,42 @@
                     {
                         DifficultyInstance difficultyinstance = this.func_175649_E(blockpos);
 
-                        if (this.func_82736_K().func_82766_b("doMobSpawning") && this.field_73012_v.nextDouble() < (double)difficultyinstance.func_180168_b() * 0.01)
+                        if (this.func_82736_K().func_82766_b("doMobSpawning") && this.field_73012_v.nextDouble() < (double)difficultyinstance.func_180168_b() * 0.01D)
                         {
                             EntitySkeletonHorse entityskeletonhorse = new EntitySkeletonHorse(this);
                             entityskeletonhorse.func_190691_p(true);
                             entityskeletonhorse.func_70873_a(0);
                             entityskeletonhorse.func_70107_b((double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p());
-                            this.func_72838_d(entityskeletonhorse);
-                            this.func_72942_c(
-                                new EntityLightningBolt(
-                                    this, (double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p(), true
-                                )
-                            );
+                            this.addEntity(entityskeletonhorse, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.LIGHTNING);
+                            this.func_72942_c(new EntityLightningBolt(this, (double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p(), true));
                         }
                         else
                         {
-                            this.func_72942_c(
-                                new EntityLightningBolt(
-                                    this, (double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p(), false
-                                )
-                            );
+                            this.func_72942_c(new EntityLightningBolt(this, (double)blockpos.func_177958_n(), (double)blockpos.func_177956_o(), (double)blockpos.func_177952_p(), false));
                         }
                     }
                 }
 
                 this.field_72984_F.func_76318_c("iceandsnow");
 
-                if (this.field_73012_v.nextInt(16) == 0)
+                if (this.field_73011_w.canDoRainSnowIce(chunk) && this.field_73012_v.nextInt(16) == 0)
                 {
                     this.field_73005_l = this.field_73005_l * 3 + 1013904223;
                     int j2 = this.field_73005_l >> 2;
                     BlockPos blockpos1 = this.func_175725_q(new BlockPos(j + (j2 & 15), 0, k + (j2 >> 8 & 15)));
                     BlockPos blockpos2 = blockpos1.func_177977_b();
 
+                    if (this.func_175697_a(blockpos2, 1)) // Forge: check area to avoid loading neighbors in unloaded chunks
                     if (this.func_175662_w(blockpos2))
                     {
-                        this.func_175656_a(blockpos2, Blocks.field_150432_aD.func_176223_P());
+                        // this.setBlockState(blockpos2, Blocks.ICE.getDefaultState());
+                        org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory.handleBlockFormEvent(this, blockpos2, Blocks.field_150432_aD.func_176223_P(), null);
                     }
 
                     if (flag && this.func_175708_f(blockpos1, true))
                     {
-                        this.func_175656_a(blockpos1, Blocks.field_150431_aC.func_176223_P());
+                        // this.setBlockState(blockpos1, Blocks.SNOW_LAYER.getDefaultState());
+                        org.bukkit.craftbukkit.v1_12_R1.event.CraftEventFactory.handleBlockFormEvent(this, blockpos1, Blocks.field_150431_aC.func_176223_P(), null);
                     }
 
                     if (flag && this.func_180494_b(blockpos2).func_76738_d())
@@ -491,9 +624,8 @@
     protected BlockPos func_175736_a(BlockPos p_175736_1_)
     {
         BlockPos blockpos = this.func_175725_q(p_175736_1_);
-        AxisAlignedBB axisalignedbb = new AxisAlignedBB(blockpos, new BlockPos(blockpos.func_177958_n(), this.func_72800_K(), blockpos.func_177952_p()))
-        .func_186662_g(3.0);
-        List<EntityLivingBase> list = this.func_175647_a(EntityLivingBase.class, axisalignedbb, new Predicate<EntityLivingBase>()
+        AxisAlignedBB axisalignedbb = (new AxisAlignedBB(blockpos, new BlockPos(blockpos.func_177958_n(), this.func_72800_K(), blockpos.func_177952_p()))).func_186662_g(3.0D);
+        List<EntityLivingBase> list = this.func_175647_a(EntityLivingBase.class, axisalignedbb, new com.google.common.base.Predicate<EntityLivingBase>()
         {
             public boolean apply(@Nullable EntityLivingBase p_apply_1_)
             {
@@ -503,7 +635,7 @@
 
         if (!list.isEmpty())
         {
-            return list.get(this.field_73012_v.nextInt(list.size())).func_180425_c();
+            return ((EntityLivingBase)list.get(this.field_73012_v.nextInt(list.size()))).func_180425_c();
         }
         else
         {
@@ -516,27 +648,23 @@
         }
     }
 
-    @Override
     public boolean func_175691_a(BlockPos p_175691_1_, Block p_175691_2_)
     {
         NextTickListEntry nextticklistentry = new NextTickListEntry(p_175691_1_, p_175691_2_);
         return this.field_94579_S.contains(nextticklistentry);
     }
 
-    @Override
     public boolean func_184145_b(BlockPos p_184145_1_, Block p_184145_2_)
     {
         NextTickListEntry nextticklistentry = new NextTickListEntry(p_184145_1_, p_184145_2_);
         return this.field_73064_N.contains(nextticklistentry);
     }
 
-    @Override
     public void func_175684_a(BlockPos p_175684_1_, Block p_175684_2_, int p_175684_3_)
     {
         this.func_175654_a(p_175684_1_, p_175684_2_, p_175684_3_, 0);
     }
 
-    @Override
     public void func_175654_a(BlockPos p_175654_1_, Block p_175654_2_, int p_175654_3_, int p_175654_4_)
     {
         Material material = p_175654_2_.func_176223_P().func_185904_a();
@@ -545,7 +673,10 @@
         {
             if (p_175654_2_.func_149698_L())
             {
-                if (this.func_175707_a(p_175654_1_.func_177982_a(-8, -8, -8), p_175654_1_.func_177982_a(8, 8, 8)))
+                //Keeping here as a note for future when it may be restored.
+                boolean isForced = getPersistentChunks().containsKey(new ChunkPos(p_175654_1_));
+                int range = isForced ? 0 : 8;
+                if (this.func_175707_a(p_175654_1_.func_177982_a(-range, -range, -range), p_175654_1_.func_177982_a(range, range, range)))
                 {
                     IBlockState iblockstate = this.func_180495_p(p_175654_1_);
 
@@ -579,9 +710,9 @@
         }
     }
 
-    @Override
     public void func_180497_b(BlockPos p_180497_1_, Block p_180497_2_, int p_180497_3_, int p_180497_4_)
     {
+        if (p_180497_2_ == null) return; //Forge: Prevent null blocks from ticking, can happen if blocks are removed in old worlds. TODO: Fix real issue causing block to be null.
         NextTickListEntry nextticklistentry = new NextTickListEntry(p_180497_1_, p_180497_2_);
         nextticklistentry.func_82753_a(p_180497_4_);
         Material material = p_180497_2_.func_176223_P().func_185904_a();
@@ -598,12 +729,11 @@
         }
     }
 
-    @Override
     public void func_72939_s()
     {
-        if (this.field_73010_i.isEmpty())
+        if (this.field_73010_i.isEmpty() && getPersistentChunks().isEmpty()) // CatServer - Use Forge logic here
         {
-            if (this.field_80004_Q++ >= 300)
+            if (this.field_80004_Q++ >= 300 && MinecraftServer.currentTick % 20 > 0) // CatServer - Prevent entity cleanup, other issues on servers with no players
             {
                 return;
             }
@@ -615,9 +745,10 @@
 
         this.field_73011_w.func_186059_r();
         super.func_72939_s();
+        catserver.server.WorldTickSkipManager.update(this); // CatServer
+        spigotConfig.currentPrimedTnt = 0; // Spigot
     }
 
-    @Override
     protected void func_184147_l()
     {
         super.func_184147_l();
@@ -681,7 +812,6 @@
         this.field_80004_Q = 0;
     }
 
-    @Override
     public boolean func_72955_a(boolean p_72955_1_)
     {
         if (this.field_72986_A.func_76067_t() == WorldType.field_180272_g)
@@ -692,6 +822,7 @@
         {
             int i = this.field_73065_O.size();
 
+            // TODO: Check if this condition should be always false(HashTreeSet from CB related)
             if (i != this.field_73064_N.size())
             {
                 throw new IllegalStateException("TickNextTick list out of synch");
@@ -700,7 +831,14 @@
             {
                 if (i > 65536)
                 {
-                    i = 65536;
+                    // i = 65536;
+                    // CraftBukkit start - If the server has too much to process over time, try to alleviate that
+                    if (i > 20 * 65536) {
+                        i = i / 20;
+                    } else {
+                        i = 65536;
+                    }
+                    // CraftBukkit end
                 }
 
                 this.field_72984_F.func_76320_a("cleaning");
@@ -727,14 +865,16 @@
                 {
                     NextTickListEntry nextticklistentry1 = iterator.next();
                     iterator.remove();
+                    //Keeping here as a note for future when it may be restored.
+                    //boolean isForced = getPersistentChunks().containsKey(new ChunkPos(nextticklistentry.xCoord >> 4, nextticklistentry.zCoord >> 4));
+                    //byte b0 = isForced ? 0 : 8;
                     int k = 0;
 
                     if (this.func_175707_a(nextticklistentry1.field_180282_a.func_177982_a(0, 0, 0), nextticklistentry1.field_180282_a.func_177982_a(0, 0, 0)))
                     {
                         IBlockState iblockstate = this.func_180495_p(nextticklistentry1.field_180282_a);
 
-                        if (iblockstate.func_185904_a() != Material.field_151579_a
-                                && Block.func_149680_a(iblockstate.func_177230_c(), nextticklistentry1.func_151351_a()))
+                        if (iblockstate.func_185904_a() != Material.field_151579_a && Block.func_149680_a(iblockstate.func_177230_c(), nextticklistentry1.func_151351_a()))
                         {
                             try
                             {
@@ -763,7 +903,6 @@
     }
 
     @Nullable
-    @Override
     public List<NextTickListEntry> func_72920_a(Chunk p_72920_1_, boolean p_72920_2_)
     {
         ChunkPos chunkpos = p_72920_1_.func_76632_l();
@@ -775,7 +914,6 @@
     }
 
     @Nullable
-    @Override
     public List<NextTickListEntry> func_175712_a(StructureBoundingBox p_175712_1_, boolean p_175712_2_)
     {
         List<NextTickListEntry> list = null;
@@ -798,10 +936,7 @@
                 NextTickListEntry nextticklistentry = iterator.next();
                 BlockPos blockpos = nextticklistentry.field_180282_a;
 
-                if (blockpos.func_177958_n() >= p_175712_1_.field_78897_a
-                        && blockpos.func_177958_n() < p_175712_1_.field_78893_d
-                        && blockpos.func_177952_p() >= p_175712_1_.field_78896_c
-                        && blockpos.func_177952_p() < p_175712_1_.field_78892_f)
+                if (blockpos.func_177958_n() >= p_175712_1_.field_78897_a && blockpos.func_177958_n() < p_175712_1_.field_78893_d && blockpos.func_177952_p() >= p_175712_1_.field_78896_c && blockpos.func_177952_p() < p_175712_1_.field_78892_f)
                 {
                     if (p_175712_2_)
                     {
@@ -815,7 +950,7 @@
 
                     if (list == null)
                     {
-                        list = Lists.newArrayList();
+                        list = Lists.<NextTickListEntry>newArrayList();
                     }
 
                     list.add(nextticklistentry);
@@ -826,21 +961,22 @@
         return list;
     }
 
-    @Override
-    public void func_72866_a(Entity p_72866_1_, boolean p_72866_2_)
+    /* CraftBukkit start - We prevent spawning in general, so this butchering is not needed
+    public void updateEntityWithOptionalForce(Entity entityIn, boolean forceUpdate)
     {
-        if (!this.func_175735_ai() && (p_72866_1_ instanceof EntityAnimal || p_72866_1_ instanceof EntityWaterMob))
-        {
-            p_72866_1_.func_70106_y();
-        }
-
-        if (!this.func_175738_ah() && p_72866_1_ instanceof INpc)
-        {
-            p_72866_1_.func_70106_y();
-        }
-
-        super.func_72866_a(p_72866_1_, p_72866_2_);
+        if (!this.canSpawnAnimals() && (entityIn instanceof EntityAnimal || entityIn instanceof EntityWaterMob))
+        {
+            entityIn.setDead();
+        }
+
+        if (!this.canSpawnNPCs() && entityIn instanceof INpc)
+        {
+            entityIn.setDead();
+        }
+
+        super.updateEntityWithOptionalForce(entityIn, forceUpdate);
     }
+    // CraftBukkit end */
 
     private boolean func_175738_ah()
     {
@@ -852,20 +988,74 @@
         return this.field_73061_a.func_71268_U();
     }
 
-    @Override
     protected IChunkProvider func_72970_h()
     {
         IChunkLoader ichunkloader = this.field_73019_z.func_75763_a(this.field_73011_w);
-        return new ChunkProviderServer(this, ichunkloader, this.field_73011_w.func_186060_c());
-    }
-
-    @Override
+        // CatServer - if provider is vanilla, proceed to create a bukkit compatible chunk generator
+        if (this.field_73011_w.getClass().toString().length() <= 3 || this.field_73011_w.getClass().toString().contains("net.minecraft")) {
+            // CraftBukkit start
+            org.bukkit.craftbukkit.v1_12_R1.generator.InternalChunkGenerator gen;
+    
+            if (this.generator != null) {
+                gen = new org.bukkit.craftbukkit.v1_12_R1.generator.CustomChunkGenerator(this, this.func_72905_C(), this.generator);
+            } else if (this.field_73011_w instanceof WorldProviderHell) {
+                gen = new org.bukkit.craftbukkit.v1_12_R1.generator.NetherChunkGenerator(this, this.func_72905_C());
+            } else if (this.field_73011_w instanceof WorldProviderEnd) {
+                gen = new org.bukkit.craftbukkit.v1_12_R1.generator.SkyLandsChunkGenerator(this, this.func_72905_C());
+            } else {
+                gen = new org.bukkit.craftbukkit.v1_12_R1.generator.NormalChunkGenerator(this, this.func_72905_C());
+            }
+    
+            this.field_73020_y = new ChunkProviderServer(this, ichunkloader, gen);
+            // CraftBukkit end
+        } else { // custom provider, load normally for forge compatibility
+            this.field_73020_y = new ChunkProviderServer(this, ichunkloader, this.field_73011_w.func_186060_c());
+        }
+        return field_73020_y;
+    }
+
+    public List<TileEntity> getTileEntities(int i, int j, int k, int l, int i1, int j1) {
+        ArrayList arraylist = Lists.newArrayList();
+
+        // CraftBukkit start - Get tile entities from chunks instead of world
+        for (int chunkX = (i >> 4); chunkX <= ((l - 1) >> 4); chunkX++) {
+            for (int chunkZ = (k >> 4); chunkZ <= ((j1 - 1) >> 4); chunkZ++) {
+                Chunk chunk = func_72964_e(chunkX, chunkZ);
+                if (chunk == null) {
+                    continue;
+                }
+                for (Object te : chunk.func_177434_r().values()) {
+                    TileEntity tileentity = (TileEntity) te;
+                    if ((tileentity.func_174877_v().func_177958_n() >= i) && (tileentity.func_174877_v().func_177956_o() >= j) && (tileentity.func_174877_v().func_177952_p() >= k) && (tileentity.func_174877_v().func_177958_n() < l) && (tileentity.func_174877_v().func_177956_o() < i1) && (tileentity.func_174877_v().func_177952_p() < j1)) {
+                        arraylist.add(tileentity);
+                    }
+                }
+            }
+        }
+        /*
+        for (int k1 = 0; k1 < this.tileEntityList.size(); ++k1) {
+            TileEntity tileentity = (TileEntity) this.tileEntityList.get(k1);
+            BlockPosition blockposition = tileentity.getPosition();
+
+            if (blockposition.getX() >= i && blockposition.getY() >= j && blockposition.getZ() >= k && blockposition.getX() < l && blockposition.getY() < i1 && blockposition.getZ() < j1) {
+                arraylist.add(tileentity);
+            }
+        }
+        */
+        // CraftBukkit end
+
+        return arraylist;
+    }
+
     public boolean func_175660_a(EntityPlayer p_175660_1_, BlockPos p_175660_2_)
     {
+        return super.func_175660_a(p_175660_1_, p_175660_2_);
+    }
+    public boolean canMineBlockBody(EntityPlayer p_175660_1_, BlockPos p_175660_2_)
+    {
         return !this.field_73061_a.func_175579_a(this, p_175660_2_, p_175660_1_) && this.func_175723_af().func_177746_a(p_175660_2_);
     }
 
-    @Override
     public void func_72963_a(WorldSettings p_72963_1_)
     {
         if (!this.field_72986_A.func_76070_v())
@@ -881,16 +1071,17 @@
 
                 super.func_72963_a(p_72963_1_);
             }
-            catch (Throwable throwable1)
+            catch (Throwable throwable)
             {
-                CrashReport crashreport = CrashReport.func_85055_a(throwable1, "Exception initializing level");
+                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Exception initializing level");
 
                 try
                 {
                     this.func_72914_a(crashreport);
                 }
-                catch (Throwable throwable)
+                catch (Throwable var5)
                 {
+                    ;
                 }
 
                 throw new ReportedException(crashreport);
@@ -927,6 +1118,7 @@
         }
         else
         {
+            if (net.minecraftforge.event.ForgeEventFactory.onCreateWorldSpawn(this, p_73052_1_)) return;
             this.field_72987_B = true;
             BiomeProvider biomeprovider = this.field_73011_w.func_177499_m();
             List<Biome> list = biomeprovider.func_76932_a();
@@ -936,6 +1128,23 @@
             int j = this.field_73011_w.func_76557_i();
             int k = 8;
 
+            // CraftBukkit start
+            if (this.generator != null) {
+                Random rand = new Random(this.func_72905_C());
+                org.bukkit.Location spawn = this.generator.getFixedSpawnLocation(((WorldServer) this).getWorld(), rand);
+
+                if (spawn != null) {
+                    if (spawn.getWorld() != ((WorldServer) this).getWorld()) {
+                        throw new IllegalStateException("Cannot set spawn point for " + this.field_72986_A.func_76065_j() + " to be in another world (" + spawn.getWorld().getName() + ")");
+                    } else {
+                        this.field_72986_A.func_176143_a(new BlockPos(spawn.getBlockX(), spawn.getBlockY(), spawn.getBlockZ()));
+                        this.field_72987_B = false;
+                        return;
+                    }
+                }
+            }
+            // CraftBukkit end
+
             if (blockpos != null)
             {
                 i = blockpos.func_177958_n();
@@ -948,12 +1157,13 @@
 
             int l = 0;
 
-            while (!this.field_73011_w.func_76566_a(i, k))
+            while (!this.canSpawn(i, k)) // CraftBukkit - use our own canSpawn
             {
                 i += random.nextInt(64) - random.nextInt(64);
                 k += random.nextInt(64) - random.nextInt(64);
+                ++l;
 
-                if (++l == 1000)
+                if (l == 1000)
                 {
                     break;
                 }
@@ -998,6 +1208,7 @@
 
         if (chunkproviderserver.func_73157_c())
         {
+            org.bukkit.Bukkit.getPluginManager().callEvent(new org.bukkit.event.world.WorldSaveEvent(getWorld()));
             if (p_73044_2_ != null)
             {
                 p_73044_2_.func_73720_a("Saving level");
@@ -1011,6 +1222,7 @@
             }
 
             chunkproviderserver.func_186027_a(p_73044_1_);
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Save(this));
 
             for (Chunk chunk : Lists.newArrayList(chunkproviderserver.func_189548_a()))
             {
@@ -1044,6 +1256,12 @@
             }
         }
 
+        // CraftBukkit start - Save secondary data for nether/end
+        if (this instanceof WorldServerMulti) {
+            ((WorldServerMulti) this).func_184166_c();
+        }
+        // CraftBukkit end
+
         this.field_72986_A.func_176145_a(this.func_175723_af().func_177741_h());
         this.field_72986_A.func_176124_d(this.func_175723_af().func_177731_f());
         this.field_72986_A.func_176141_c(this.func_175723_af().func_177721_g());
@@ -1055,20 +1273,25 @@
         this.field_72986_A.func_176135_e(this.func_175723_af().func_177732_i());
         this.field_73019_z.func_75755_a(this.field_72986_A, this.field_73061_a.func_184103_al().func_72378_q());
         this.field_72988_C.func_75744_a();
-    }
-
-    @Override
+        this.perWorldStorage.func_75744_a();
+    }
+
+    public boolean addEntity(Entity entityIn, CreatureSpawnEvent.SpawnReason spawnReason) {
+        // World.spawnEntity(Entity) will call this, and we still want to perform
+        // existing entity checking when it's called with a SpawnReason
+        return this.func_184165_i(entityIn) ? super.addEntity(entityIn, spawnReason) : false;
+    }
+
     public boolean func_72838_d(Entity p_72838_1_)
     {
         return this.func_184165_i(p_72838_1_) ? super.func_72838_d(p_72838_1_) : false;
     }
 
-    @Override
     public void func_175650_b(Collection<Entity> p_175650_1_)
     {
         for (Entity entity : Lists.newArrayList(p_175650_1_))
         {
-            if (this.func_184165_i(entity))
+            if (this.func_184165_i(entity) && !net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinWorldEvent(entity, this)))
             {
                 this.field_72996_f.add(entity);
                 this.func_72923_a(entity);
@@ -1080,7 +1303,7 @@
     {
         if (p_184165_1_.field_70128_L)
         {
-            field_147491_a.warn("Tried to add entity {} but it was marked as removed already", EntityList.func_191301_a(p_184165_1_));
+            // LOGGER.warn("Tried to add entity {} but it was marked as removed already", (Object)EntityList.getKey(entityIn));
             return false;
         }
         else
@@ -1099,11 +1322,11 @@
                 {
                     if (!(p_184165_1_ instanceof EntityPlayer))
                     {
-                        field_147491_a.warn("Keeping entity {} that already exists with UUID {}", EntityList.func_191301_a(entity), uuid.toString());
+                        // LOGGER.warn("Keeping entity {} that already exists with UUID {}", EntityList.getKey(entity), uuid.toString());
                         return false;
                     }
 
-                    field_147491_a.warn("Force-added player with duplicate UUID {}", uuid.toString());
+                    field_147491_a.warn("Force-added player with duplicate UUID {}", (Object)uuid.toString());
                 }
 
                 this.func_72973_f(entity);
@@ -1113,7 +1336,6 @@
         }
     }
 
-    @Override
     public void func_72923_a(Entity p_72923_1_)
     {
         super.func_72923_a(p_72923_1_);
@@ -1130,7 +1352,6 @@
         }
     }
 
-    @Override
     public void func_72847_b(Entity p_72847_1_)
     {
         super.func_72847_b(p_72847_1_);
@@ -1147,22 +1368,20 @@
         }
     }
 
-    @Override
     public boolean func_72942_c(Entity p_72942_1_)
     {
+        // CatServer - ignore modded weather effect
+        if (p_72942_1_.getBukkitEntity() instanceof org.bukkit.entity.LightningStrike) {
+            LightningStrikeEvent lightning = new LightningStrikeEvent(this.getWorld(), (org.bukkit.entity.LightningStrike) p_72942_1_.getBukkitEntity());
+            this.getServer().getPluginManager().callEvent(lightning);
+
+            if (lightning.isCancelled()) {
+                return false;
+            }
+        }
         if (super.func_72942_c(p_72942_1_))
         {
-            this.field_73061_a
-            .func_184103_al()
-            .func_148543_a(
-                null,
-                p_72942_1_.field_70165_t,
-                p_72942_1_.field_70163_u,
-                p_72942_1_.field_70161_v,
-                512.0,
-                this.field_73011_w.func_186058_p().func_186068_a(),
-                new SPacketSpawnGlobalEntity(p_72942_1_)
-            );
+            this.field_73061_a.func_184103_al().func_148543_a((EntityPlayer)null, p_72942_1_.field_70165_t, p_72942_1_.field_70163_u, p_72942_1_.field_70161_v, 512.0D, this.field_73011_w.getDimension(), new SPacketSpawnGlobalEntity(p_72942_1_));
             return true;
         }
         else
@@ -1171,7 +1390,6 @@
         }
     }
 
-    @Override
     public void func_72960_a(Entity p_72960_1_, byte p_72960_2_)
     {
         this.func_73039_n().func_151248_b(p_72960_1_, new SPacketEntityStatus(p_72960_1_, p_72960_2_));
@@ -1182,36 +1400,36 @@
         return (ChunkProviderServer)super.func_72863_F();
     }
 
-    @Override
-    public Explosion func_72885_a(
-        @Nullable Entity p_72885_1_, double p_72885_2_, double p_72885_4_, double p_72885_6_, float p_72885_8_, boolean p_72885_9_, boolean p_72885_10_
-    )
+    public Explosion func_72885_a(@Nullable Entity p_72885_1_, double p_72885_2_, double p_72885_4_, double p_72885_6_, float p_72885_8_, boolean p_72885_9_, boolean p_72885_10_)
     {
-        Explosion explosion = new Explosion(this, p_72885_1_, p_72885_2_, p_72885_4_, p_72885_6_, p_72885_8_, p_72885_9_, p_72885_10_);
-        explosion.func_77278_a();
-        explosion.func_77279_a(false);
+        Explosion explosion = super.func_72885_a(p_72885_1_, p_72885_2_, p_72885_4_, p_72885_6_, p_72885_8_, p_72885_9_, p_72885_10_);
 
-        if (!p_72885_10_)
+        if (explosion.wasCanceled) {
+            return explosion;
+        }
+        if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
+        /* Remove
+        Explosion explosion = new Explosion(this, entityIn, x, y, z, strength, isFlaming, isSmoking);
+        explosion.doExplosionA();
+        explosion.doExplosionB(false);
+        */
+        // CraftBukkit - TODO: Check if explosions are still properly implemented
+        if (!p_72885_9_)
         {
             explosion.func_180342_d();
         }
 
         for (EntityPlayer entityplayer : this.field_73010_i)
         {
-            if (entityplayer.func_70092_e(p_72885_2_, p_72885_4_, p_72885_6_) < 4096.0)
+            if (entityplayer.func_70092_e(p_72885_2_, p_72885_4_, p_72885_6_) < 4096.0D)
             {
-                ((EntityPlayerMP)entityplayer)
-                .field_71135_a
-                .func_147359_a(
-                    new SPacketExplosion(p_72885_2_, p_72885_4_, p_72885_6_, p_72885_8_, explosion.func_180343_e(), explosion.func_77277_b().get(entityplayer))
-                );
+                ((EntityPlayerMP)entityplayer).field_71135_a.func_147359_a(new SPacketExplosion(p_72885_2_, p_72885_4_, p_72885_6_, p_72885_8_, explosion.func_180343_e(), (Vec3d)explosion.func_77277_b().get(entityplayer)));
             }
         }
 
         return explosion;
     }
 
-    @Override
     public void func_175641_c(BlockPos p_175641_1_, Block p_175641_2_, int p_175641_3_, int p_175641_4_)
     {
         BlockEventData blockeventdata = new BlockEventData(p_175641_1_, p_175641_2_, p_175641_3_, p_175641_4_);
@@ -1238,19 +1456,8 @@
             {
                 if (this.func_147485_a(blockeventdata))
                 {
-                    this.field_73061_a
-                    .func_184103_al()
-                    .func_148543_a(
-                        null,
-                        (double)blockeventdata.func_180328_a().func_177958_n(),
-                        (double)blockeventdata.func_180328_a().func_177956_o(),
-                        (double)blockeventdata.func_180328_a().func_177952_p(),
-                        64.0,
-                        this.field_73011_w.func_186058_p().func_186068_a(),
-                        new SPacketBlockAction(
-                            blockeventdata.func_180328_a(), blockeventdata.func_151337_f(), blockeventdata.func_151339_d(), blockeventdata.func_151338_e()
-                        )
-                    );
+                    // CraftBukkit - this.provider.dimension -> this.dimension
+                    this.field_73061_a.func_184103_al().func_148543_a((EntityPlayer)null, (double)blockeventdata.func_180328_a().func_177958_n(), (double)blockeventdata.func_180328_a().func_177956_o(), (double)blockeventdata.func_180328_a().func_177952_p(), 64.0D, dimension, new SPacketBlockAction(blockeventdata.func_180328_a(), blockeventdata.func_151337_f(), blockeventdata.func_151339_d(), blockeventdata.func_151338_e()));
                 }
             }
 
@@ -1261,9 +1468,7 @@
     private boolean func_147485_a(BlockEventData p_147485_1_)
     {
         IBlockState iblockstate = this.func_180495_p(p_147485_1_.func_180328_a());
-        return iblockstate.func_177230_c() == p_147485_1_.func_151337_f()
-               ? iblockstate.func_189547_a(this, p_147485_1_.func_180328_a(), p_147485_1_.func_151339_d(), p_147485_1_.func_151338_e())
-               : false;
+        return iblockstate.func_177230_c() == p_147485_1_.func_151337_f() ? iblockstate.func_189547_a(this, p_147485_1_.func_180328_a(), p_147485_1_.func_151339_d(), p_147485_1_.func_151338_e()) : false;
     }
 
     public void func_73041_k()
@@ -1271,7 +1476,6 @@
         this.field_73019_z.func_75759_a();
     }
 
-    @Override
     protected void func_72979_l()
     {
         boolean flag = this.func_72896_J();
@@ -1279,36 +1483,35 @@
 
         if (this.field_73003_n != this.field_73004_o)
         {
-            this.field_73061_a
-            .func_184103_al()
-            .func_148537_a(new SPacketChangeGameState(7, this.field_73004_o), this.field_73011_w.func_186058_p().func_186068_a());
+            this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(7, this.field_73004_o), this.field_73011_w.getDimension());
         }
 
         if (this.field_73018_p != this.field_73017_q)
         {
-            this.field_73061_a
-            .func_184103_al()
-            .func_148537_a(new SPacketChangeGameState(8, this.field_73017_q), this.field_73011_w.func_186058_p().func_186068_a());
+            this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(8, this.field_73017_q), this.field_73011_w.getDimension());
         }
 
+        /* The function in use here has been replaced in order to only send the weather info to players in the correct dimension,
+         * rather than to all players on the server. This is what causes the client-side rain, as the
+         * client believes that it has started raining locally, rather than in another dimension.
+         */
         if (flag != this.func_72896_J())
         {
             if (flag)
             {
-                this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(2, 0.0F));
+                this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(2, 0.0F), this.field_73011_w.getDimension());
             }
             else
             {
-                this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(1, 0.0F));
+                this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(1, 0.0F), this.field_73011_w.getDimension());
             }
 
-            this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(7, this.field_73004_o));
-            this.field_73061_a.func_184103_al().func_148540_a(new SPacketChangeGameState(8, this.field_73017_q));
+            this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(7, this.field_73004_o), this.field_73011_w.getDimension());
+            this.field_73061_a.func_184103_al().func_148537_a(new SPacketChangeGameState(8, this.field_73017_q), this.field_73011_w.getDimension());
         }
     }
 
     @Nullable
-    @Override
     public MinecraftServer func_73046_m()
     {
         return this.field_73061_a;
@@ -1334,98 +1537,41 @@
         return this.field_73019_z.func_186340_h();
     }
 
-    public void func_175739_a(
-        EnumParticleTypes p_175739_1_,
-        double p_175739_2_,
-        double p_175739_4_,
-        double p_175739_6_,
-        int p_175739_8_,
-        double p_175739_9_,
-        double p_175739_11_,
-        double p_175739_13_,
-        double p_175739_15_,
-        int... p_175739_17_
-    )
-    {
-        this.func_180505_a(
-            p_175739_1_, false, p_175739_2_, p_175739_4_, p_175739_6_, p_175739_8_, p_175739_9_, p_175739_11_, p_175739_13_, p_175739_15_, p_175739_17_
-        );
-    }
-
-    public void func_180505_a(
-        EnumParticleTypes p_180505_1_,
-        boolean p_180505_2_,
-        double p_180505_3_,
-        double p_180505_5_,
-        double p_180505_7_,
-        int p_180505_9_,
-        double p_180505_10_,
-        double p_180505_12_,
-        double p_180505_14_,
-        double p_180505_16_,
-        int... p_180505_18_
-    )
-    {
-        SPacketParticles spacketparticles = new SPacketParticles(
-            p_180505_1_,
-            p_180505_2_,
-            (float)p_180505_3_,
-            (float)p_180505_5_,
-            (float)p_180505_7_,
-            (float)p_180505_10_,
-            (float)p_180505_12_,
-            (float)p_180505_14_,
-            (float)p_180505_16_,
-            p_180505_9_,
-            p_180505_18_
-        );
+    public void func_175739_a(EnumParticleTypes p_175739_1_, double p_175739_2_, double p_175739_4_, double p_175739_6_, int p_175739_8_, double p_175739_9_, double p_175739_11_, double p_175739_13_, double p_175739_15_, int... p_175739_17_)
+    {
+        this.func_180505_a(p_175739_1_, false, p_175739_2_, p_175739_4_, p_175739_6_, p_175739_8_, p_175739_9_, p_175739_11_, p_175739_13_, p_175739_15_, p_175739_17_);
+    }
+
+    public void func_180505_a(EnumParticleTypes p_180505_1_, boolean p_180505_2_, double p_180505_3_, double p_180505_5_, double p_180505_7_, int p_180505_9_, double p_180505_10_, double p_180505_12_, double p_180505_14_, double p_180505_16_, int... p_180505_18_)
+    {
+        // CraftBukkit - visibility api support
+        sendParticles(null, p_180505_1_, p_180505_2_, p_180505_3_, p_180505_5_, p_180505_7_, p_180505_9_, p_180505_10_, p_180505_12_, p_180505_14_, p_180505_16_, p_180505_18_);
+    }
+
+    public void sendParticles(@Nullable EntityPlayerMP sender, EnumParticleTypes particleType, boolean longDistance, double xCoord, double yCoord, double zCoord, int numberOfParticles, double xOffset, double yOffset, double zOffset, double particleSpeed, int... particleArguments) {
+        // CraftBukkit end
+        SPacketParticles spacketparticles = new SPacketParticles(particleType, longDistance, (float)xCoord, (float)yCoord, (float)zCoord, (float)xOffset, (float)yOffset, (float)zOffset, (float)particleSpeed, numberOfParticles, particleArguments);
 
         for (int i = 0; i < this.field_73010_i.size(); ++i)
         {
             EntityPlayerMP entityplayermp = (EntityPlayerMP)this.field_73010_i.get(i);
-            this.func_184159_a(entityplayermp, p_180505_2_, p_180505_3_, p_180505_5_, p_180505_7_, spacketparticles);
+            if (sender != null && !entityplayermp.getBukkitEntity().canSee(sender.getBukkitEntity())) continue;
+            this.func_184159_a(entityplayermp, longDistance, xCoord, yCoord, zCoord, spacketparticles);
         }
     }
 
-    public void func_184161_a(
-        EntityPlayerMP p_184161_1_,
-        EnumParticleTypes p_184161_2_,
-        boolean p_184161_3_,
-        double p_184161_4_,
-        double p_184161_6_,
-        double p_184161_8_,
-        int p_184161_10_,
-        double p_184161_11_,
-        double p_184161_13_,
-        double p_184161_15_,
-        double p_184161_17_,
-        int... p_184161_19_
-    )
+    public void func_184161_a(EntityPlayerMP p_184161_1_, EnumParticleTypes p_184161_2_, boolean p_184161_3_, double p_184161_4_, double p_184161_6_, double p_184161_8_, int p_184161_10_, double p_184161_11_, double p_184161_13_, double p_184161_15_, double p_184161_17_, int... p_184161_19_)
     {
-        Packet<?> packet = new SPacketParticles(
-            p_184161_2_,
-            p_184161_3_,
-            (float)p_184161_4_,
-            (float)p_184161_6_,
-            (float)p_184161_8_,
-            (float)p_184161_11_,
-            (float)p_184161_13_,
-            (float)p_184161_15_,
-            (float)p_184161_17_,
-            p_184161_10_,
-            p_184161_19_
-        );
+        Packet<?> packet = new SPacketParticles(p_184161_2_, p_184161_3_, (float)p_184161_4_, (float)p_184161_6_, (float)p_184161_8_, (float)p_184161_11_, (float)p_184161_13_, (float)p_184161_15_, (float)p_184161_17_, p_184161_10_, p_184161_19_);
         this.func_184159_a(p_184161_1_, p_184161_3_, p_184161_4_, p_184161_6_, p_184161_8_, packet);
     }
 
-    private void func_184159_a(
-        EntityPlayerMP p_184159_1_, boolean p_184159_2_, double p_184159_3_, double p_184159_5_, double p_184159_7_, Packet<?> p_184159_9_
-    )
+    private void func_184159_a(EntityPlayerMP p_184159_1_, boolean p_184159_2_, double p_184159_3_, double p_184159_5_, double p_184159_7_, Packet<?> p_184159_9_)
     {
         BlockPos blockpos = p_184159_1_.func_180425_c();
         double d0 = blockpos.func_177954_c(p_184159_3_, p_184159_5_, p_184159_7_);
 
-        if (d0 <= 1024.0 || p_184159_2_ && d0 <= 262144.0)
+        if (d0 <= 1024.0D || p_184159_2_ && d0 <= 262144.0D)
         {
             p_184159_1_.field_71135_a.func_147359_a(p_184159_9_);
         }
@@ -1437,20 +1583,17 @@
         return this.field_175741_N.get(p_175733_1_);
     }
 
-    @Override
     public ListenableFuture<Object> func_152344_a(Runnable p_152344_1_)
     {
         return this.field_73061_a.func_152344_a(p_152344_1_);
     }
 
-    @Override
     public boolean func_152345_ab()
     {
         return this.field_73061_a.func_152345_ab();
     }
 
     @Nullable
-    @Override
     public BlockPos func_190528_a(String p_190528_1_, BlockPos p_190528_2_, boolean p_190528_3_)
     {
         return this.func_72863_F().func_180513_a(this, p_190528_1_, p_190528_2_, p_190528_3_);
@@ -1464,6 +1607,11 @@
     public FunctionManager func_193037_A()
     {
         return this.field_193036_D;
+    }
+
+    public java.io.File getChunkSaveLocation()
+    {
+        return ((net.minecraft.world.chunk.storage.AnvilChunkLoader)func_72863_F().field_73247_e).field_75825_d;
     }
 
     static class ServerBlockEventList extends ArrayList<BlockEventData>
